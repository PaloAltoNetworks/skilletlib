#
# Example Output Capture Filtering
#
# In order to properly validate a config, it is often necessary to convert the XML structure to an object, which
# can then be used in jinja expression to perform basic logic and validation. These examples demonstrate how
# skillets are optimized for this task.
#

name: example-capture-filtering
label: Example of how to use 'filter_items' with object capturing

description: |
  This example Skillet shows how to parse and validate a config using the 'filter_items' attribute in output capturing.
  This is useful when you want to check a 'list' of items and filter out only those that fail a test. For example,
  to get security rules that pertain to a certain zone, or interfaces with layer3 configuration, etc.

type: pan_validation
labels:
  collection:
    - Example Skillets
    - Validation

variables:
  - name: SOME_VARIABLE
    description: Some VARIABLE
    default: present
    type_hint: text

snippets:
  - name: parse config variable and capture outputs
    cmd: parse
    variable: config
    outputs:
      - name: interface_with_ip
        capture_object: /config/devices/entry/network/interface/ethernet/entry
        filter_items: item | node_attribute_present('entry.layer3.ip.entry', 'name', '192.168.250.1/24')

  - name: ensure_interface_was_found
    label: Ensures the interface was found
    fail_message: This thing {{ here }} failed
    fail_action:
    test: |
      (
        interface_with_ip is defined
        and interface_with_ip | node_attribute_present('entry', 'name', 'ethernet1/7')
      )
    documentation_link: https://github.com/PaloAltoNetworks/skilletlib/blob/develop/docs/source/examples.rst

